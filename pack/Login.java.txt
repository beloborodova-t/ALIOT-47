package com.furr.MeCO;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.KeyEvent;
import android.view.View;
import android.widget.Button;

import com.parse.ParseException;
import com.parse.ParseUser;
import com.parse.SignUpCallback;
import java.util.Random;

@SuppressWarnings("deprecation")
public class Login extends AppCompatActivity {
    protected Button loginButton;
    private ProgressDialog mProgressDialog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        loginButton = findViewById(R.id.btn_login);
        loginButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View view) {
            Random random = new Random();
            final String  Username="User"+String.valueOf(random.nextInt()%100),
                    Password=String.valueOf(random.nextInt()%100),
                    Email=String.valueOf(random.nextInt()%100)+"@e.mail",
                    year="11";
            {
                mProgressDialog = new ProgressDialog(Login.this);
                mProgressDialog.setTitle("Создание пользователя");  // Set progressdialog title
                mProgressDialog.setMessage("Ожидайте...");          // Set progressdialog message
                mProgressDialog.setIcon(R.drawable.process);
                mProgressDialog.setIndeterminate(false);
                mProgressDialog.show();                             // Show progressdialog

                ParseUser newUser = new ParseUser();                //create new user data
                newUser.setUsername(Username);
                newUser.setPassword(Password);
                newUser.setEmail(Email);
                newUser.put("DOB", year);
                newUser.put("Complete", true);
                newUser.signUpInBackground(new SignUpCallback() {
                    @Override
                    public void done(ParseException e) {
                        if (e == null) {// Success!
                            mProgressDialog.dismiss();
                            Intent intent = new Intent(Login.this, MainActivity.class);
                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
                            startActivity(intent);
                        } else {
                            try {
                                mProgressDialog.dismiss();
                                ParseUser.enableAutomaticUser();
                                ParseUser.getCurrentUser().setUsername(Username);
                                ParseUser.getCurrentUser().setEmail(Email);
                                ParseUser.getCurrentUser().setPassword(Password);
                                ParseUser.getCurrentUser().saveInBackground();
                                Intent intent = new Intent(Login.this, MainActivity.class);
                                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
                                startActivity(intent);
                            } catch (Exception e1) {
                                e1.printStackTrace();
                            }
                        }
                    }
                });
            }}
        });
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        return (keyCode == KeyEvent.KEYCODE_BACK || super.onKeyDown(keyCode, event));
    }
}